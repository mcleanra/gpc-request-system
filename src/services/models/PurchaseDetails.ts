import { autoserialize, autoserializeAs } from "cerialize";
import * as Yup from "yup";
import { getRandomString } from "@pnp/common";

// Generated by https://quicktype.io

export class Detail {
  @autoserialize
  id: string;
  @autoserialize
  requestQty: number;
  @autoserialize
  requestDesc: string;
  @autoserialize
  requestSrc: string;
  @autoserialize
  requestDdForm: boolean;
  @autoserialize
  requestDaForm: boolean;
  @autoserialize
  requestCost: number;
  @autoserialize
  requestTotal: number;

  constructor(data: any = {}) {
    this.id = data.id || getRandomString(8);
    this.requestQty = data.requestQty || 0;
    this.requestDesc = data.requestDesc || "";
    this.requestSrc = data.requestSrc || "";
    this.requestDdForm =
      data.requestDdForm === "true" || data.requestDdForm === true
        ? true
        : false;
    this.requestDaForm =
      data.requestDaForm === "true" || data.requestDaForm === true
        ? true
        : false;
    this.requestCost = data.requestCost || 0;
    this.requestTotal = data.requestTotal || 0;
  }

  public getValidationSchema(): Yup.ObjectSchema {
    return Yup.object({
      requestQty: Yup.number()
        .required("Required")
        .min(0, "No negative quantities"),
      requestDesc: Yup.string().required("Required"),
      requestSrc: Yup.string().required("Required"),
      requestDdForm: Yup.boolean(),
      requestDaForm: Yup.boolean(),
      requestCost: Yup.number()
        .required("Required")
        .min(0, "No negative costs"),
      requestTotal: Yup.number()
        .required("Required")
        .min(0, "No negative totals")
    });
  }
}

export class PurchaseDetails {
  @autoserializeAs(Detail)
  Details: Detail[];

  constructor(data: any = {}) {
    this.Details = data.Details || [];
  }
}
